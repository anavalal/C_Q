❌ El error concreto
En la función ejecutar_analisis_completo(...) pasabas objetos datetime a la consulta SQL:
Python
Copy

parametros.extend([datetime(2025, 7, 16, 0, 0, tzinfo=timezone.utc), ...])

asyncpg rechazó ese tipo y lanzó:
❌ Error: invalid input for query argument $1: datetime.datetime(...) (expected str, got datetime)
🔒 Consecuencia inmediata

    La consulta no se ejecutaba → devolvía 0 filas.
    Por tanto:
        No salía ningún mensaje.
        Y tampoco el campo user_id (aunque estuviera bien en la BD).

✅ Solución aplicada
Convertir a string ISO antes de enviar:
Python
Copy

parametros.extend([datetime(...).isoformat(), datetime(...).isoformat()])

✅ Resultado

    La consulta sí se ejecuta.
    Devuelve los mensajes.
    Y con ellos el user_id (ya con el nombre).

🔍 Síntesis

    El parámetro datetime rompía la query → 0 filas → 0 mensajes → 0 user_id visible













# 🔍 DEBUG: últimos 10 registros filtrados
st.write("🔍 Últimos 10 registros filtrados:")
st.dataframe(df.tail(10)[["createdAt", "user_id", "content"]])






st.write("🔍 DEBUG – Rango filtrado:")
st.write("inicio_dt:", inicio_dt)
st.write("fin_dt  :", fin_dt)
st.write("mínimo en datos:", df["createdAt"].min())
st.write("máximo en datos:", df["createdAt"].max())
st.write("filas sin filtro:", len(df))
st.write("filas con filtro:", len(df_filtrado))
