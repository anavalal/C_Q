import sys
import os
import pandas as pd
from datetime import datetime
from pathlib import Path

sys.path.insert(0, os.path.abspath('..'))

from batch.utilities.chat_history.postgresdbservice import PostgresConversationClient

OUTPUT_PATH = r"C:\Users\avallsal\OneDrive - Capgemini\Desktop\TELEFÃ“NICA\reportes_RAN\RAN_AVAD_Completo_{}.xlsx".format(
    datetime.now().strftime("%Y%m%d_%H%M%S")
)

CONFIG = {
    "user": "usravad",
    "password": "P@w0Rd1.2@25",
    "host": "teepq02s-euwepc-teradpgsql.postgres.database.azure.com",
    "database": "avad_pre"
}

import nest_asyncio
nest_asyncio.apply()

async def extraer_todos_los_datos():
    """Extrae todos los datos"""
    client = PostgresConversationClient(**CONFIG)
    await client.connect()
    results = await client.conn.fetch("""
        SELECT m.*, c.title AS conversation_title, c.type AS conversation_type
        FROM messages m
        LEFT JOIN conversations c ON m.conversation_id = c.conversation_id
        ORDER BY m."createdAt" DESC
    """)
    await client.close()
    return pd.DataFrame([dict(row) for row in results])

import asyncio
nest_asyncio.apply()  

df = asyncio.run(extraer_todos_los_datos())
df.to_excel(OUTPUT_PATH, index=False)

print(f"âœ… Guardado en: {OUTPUT_PATH}")
print(f"ðŸ“Š Registros: {len(df)}")
print(f"ðŸ“‹ Columnas: {len(df.columns)}")
